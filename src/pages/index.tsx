// import Head from "next/head";
// import Image from "next/image";
// import { Geist, Geist_Mono } from "next/font/google";
// import styles from "@/styles/Home.module.css";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export default function Home() {
//   return (
//     <>
//       <Head>
//         <title>Create Next App</title>
//         <meta name="description" content="Generated by create next app" />
//         <meta name="viewport" content="width=device-width, initial-scale=1" />
//         <link rel="icon" href="/favicon.ico" />
//       </Head>
//       <div
//         className={`${styles.page} ${geistSans.variable} ${geistMono.variable}`}
//       >
//         <main className={styles.main}>
//           <Image
//             className={styles.logo}
//             src="/next.svg"
//             alt="Next.js logo"
//             width={180}
//             height={38}
//             priority
//           />
//           <ol>
//             <li>
//               Get started by editing <code>src/pages/index.tsx</code>.
//             </li>
//             <li>Save and see your changes instantly.</li>
//           </ol>

//           <div className={styles.ctas}>
//             <a
//               className={styles.primary}
//               href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//               target="_blank"
//               rel="noopener noreferrer"
//             >
//               <Image
//                 className={styles.logo}
//                 src="/vercel.svg"
//                 alt="Vercel logomark"
//                 width={20}
//                 height={20}
//               />
//               Deploy now
//             </a>
//             <a
//               href="https://nextjs.org/docs?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//               target="_blank"
//               rel="noopener noreferrer"
//               className={styles.secondary}
//             >
//               Read our docs
//             </a>
//           </div>
//         </main>
//         <footer className={styles.footer}>
//           <a
//             href="https://nextjs.org/learn?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             target="_blank"
//             rel="noopener noreferrer"
//           >
//             <Image
//               aria-hidden
//               src="/file.svg"
//               alt="File icon"
//               width={16}
//               height={16}
//             />
//             Learn
//           </a>
//           <a
//             href="https://vercel.com/templates?framework=next.js&utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             target="_blank"
//             rel="noopener noreferrer"
//           >
//             <Image
//               aria-hidden
//               src="/window.svg"
//               alt="Window icon"
//               width={16}
//               height={16}
//             />
//             Examples
//           </a>
//           <a
//             href="https://nextjs.org?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
//             target="_blank"
//             rel="noopener noreferrer"
//           >
//             <Image
//               aria-hidden
//               src="/globe.svg"
//               alt="Globe icon"
//               width={16}
//               height={16}
//             />
//             Go to nextjs.org â†’
//           </a>
//         </footer>
//       </div>
//     </>
//   );



// import Link from "next/link";
// import styles from '../styles/Home.module.css';

// export default function Home() {
//   return (
//     <div className={styles.container}>
//       <h1 className={styles.title}>Welcome to the Placement Platform</h1>
//       <ul className={styles.list}>
//         <li className={styles.listItem}>
//           <Link href="/admin/dashboard" className={styles.link}>
//             Admin Dashboard
//           </Link>
//         </li>
//         <li className={styles.listItem}>
//           <Link href="/student/dashboard" className={styles.link}>
//             Student Dashboard
//           </Link>
//         </li>
//         <li className={styles.listItem}>
//           <Link href="/recruiter/dashboard" className={styles.link}>
//             Recruiter Dashboard
//           </Link>
//         </li>
//       </ul>
//     </div>
//   );
// }


// pages/index.tsx
import { useState } from 'react';
import Link from 'next/link';
import styles from '../styles/Home.module.css';

type UserType = 'student' | 'recruiter' | 'admin';

export default function Home() {
  const [showSignup, setShowSignup] = useState(false);
  const [selectedUserType, setSelectedUserType] = useState<UserType | null>(null);
  const [signupForm, setSignupForm] = useState({
    name: '',
    email: '',
    password: '',
    userType: '' as UserType
  });

  const handleSignupChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setSignupForm(prev => ({
      ...prev,
      [name]: value,
      userType: selectedUserType || prev.userType
    }));
  };

  const handleSignup = (e: React.FormEvent) => {
    e.preventDefault();
    // Implement signup logic
    console.log('Signup Data:', signupForm);
  };

  return (
    <div className={styles.container}>
      <div className={styles.background}></div>
      <div className={styles.content}>
        <h1 className={styles.title}>Placement Platform</h1>
        
        <div className={styles.buttonGroup}>
          <button 
            className={styles.mainButton}
            onClick={() => {
              setShowSignup(true);
              setSelectedUserType(null);
            }}
          >
            Sign Up
          </button>
          
          <div className={styles.signinOptions}>
            <Link href="/student/signin" className={styles.link}>
              <button className={styles.signinButton}>
                Student Sign In
              </button>
            </Link>
            <Link href="/recruiter/signin" className={styles.link}>
              <button className={styles.signinButton}>
                Recruiter Sign In
              </button>
            </Link>
            <Link href="/admin/signin" className={styles.link}>
              <button className={styles.signinButton}>
                Admin Sign In
              </button>
            </Link>
          </div>
        </div>

        {showSignup && (
          <div className={styles.modal}>
            <div className={styles.modalContent}>
              <h2>Select User Type</h2>
              <div className={styles.userTypeSelect}>
                <button 
                  className={`${styles.userTypeButton} ${selectedUserType === 'student' ? styles.selected : ''}`}
                  onClick={() => setSelectedUserType('student')}
                >
                  Student
                </button>
                <button 
                  className={`${styles.userTypeButton} ${selectedUserType === 'recruiter' ? styles.selected : ''}`}
                  onClick={() => setSelectedUserType('recruiter')}
                >
                  Recruiter
                </button>
                <button 
                  className={`${styles.userTypeButton} ${selectedUserType === 'admin' ? styles.selected : ''}`}
                  onClick={() => setSelectedUserType('admin')}
                >
                  Admin
                </button>
              </div>

              {selectedUserType && (
                <form onSubmit={handleSignup} className={styles.signupForm}>
                  <input
                    type="text"
                    name="name"
                    placeholder="Full Name"
                    value={signupForm.name}
                    onChange={handleSignupChange}
                    required
                  />
                  <input
                    type="email"
                    name="email"
                    placeholder="Email Address"
                    value={signupForm.email}
                    onChange={handleSignupChange}
                    required
                  />
                  <input
                    type="password"
                    name="password"
                    placeholder="Password"
                    value={signupForm.password}
                    onChange={handleSignupChange}
                    required
                  />
                  <button type="submit" className={styles.submitButton}>
                    Sign Up as {selectedUserType.charAt(0).toUpperCase() + selectedUserType.slice(1)}
                  </button>
                </form>
              )}
              
              <button 
                className={styles.closeButton}
                onClick={() => {
                  setShowSignup(false);
                  setSelectedUserType(null);
                }}
              >
                Close
              </button>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}